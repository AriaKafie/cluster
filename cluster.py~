import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import numpy as np

# Load the CSV file
file_path = 'movies.csv'
data = pd.read_csv(file_path)

# Select numerical columns
numerical_columns = ['popularity', 'vote_average', 'vote_count']
numerical_data = data[numerical_columns]

# Handle missing values (if any)
numerical_data = numerical_data.dropna()

# Standardize the data
scaler = StandardScaler()
scaled_data = scaler.fit_transform(numerical_data)

# Apply K-means
k = 3  # Number of clusters (adjust as needed)
kmeans = KMeans(n_clusters=k, random_state=42)
kmeans.fit(scaled_data)

# Get cluster centers and distances
cluster_centers = kmeans.cluster_centers_
distances = kmeans.transform(scaled_data).min(axis=1)

# Define a threshold for anomalies (e.g., 95th percentile of distances)
threshold = np.percentile(distances, 95)

# Identify anomalies
data['is_anomaly'] = distances > threshold

# Save the anomalies to a CSV (optional)
anomalies = data[data['is_anomaly']]
anomalies.to_csv('anomalies.csv', index=False)

# Print the results
print(f"Number of anomalies detected: {anomalies.shape[0]}")
print(anomalies)
