
#ifndef TYPES_H
#define TYPES_H

#include <cstdint>
#include <string>

inline int days_since_epoch(const std::string& date_str)
{
    std::tm tm = {}; // Initialize to all zeros
    std::istringstream ss(date_str);
    
    // Parse the date in the format "yyyy-mm-dd"
    ss >> std::get_time(&tm, "%Y-%m-%d");
    if (ss.fail()) {
        throw std::invalid_argument("Invalid date format. Expected yyyy-mm-dd.");
    }
    
    // Set the time to midnight
    tm.tm_hour = 0;
    tm.tm_min = 0;
    tm.tm_sec = 0;
    
    // Convert to time_t and calculate days since the epoch
    std::time_t time = std::mktime(&tm);
    if (time == -1) {
        throw std::runtime_error("Failed to convert date to time_t.");
    }
    
    const int seconds_per_day = 86400; // 24 * 60 * 60
    return static_cast<int>(time / seconds_per_day);
}

struct FeatureVector
{
    int64_t id;
    std::string title;
    std::string overview;
    
};

#endif
